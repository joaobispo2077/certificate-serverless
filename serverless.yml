service:
  name: certificator

provider: 
  name: aws
  runtime: nodejs14.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  versionFunctions: false # to disable function cache

  environment:
    CERTIFICATES_TABLE: ${self:custom.${self:provider.stage}.database.users_certificate.name}

plugins:
  - serverless-webpack
  - serverless-dynamodb-local # serverless dynamodb install
  - serverless-offline


custom:
  # serverless-offline:
  #   httpPort: 4000
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
  dynamodb:
    stages:
      - dev
      - local
    start:
      port: 8080
      inMemory: true
      migrate: true
  dev:
    database:
      users_certificate:
        name: users_certificate_${self:provider.stage}

functions:
  generateCertificate:
    handler: src/functions/generateCertificate.handler
    events:
      - http:
          path: /certificate
          method: POST
          cors: true

resources:
  Resources:
    dbCertificateUsers:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.${self:provider.stage}.database.users_certificate.name}
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH